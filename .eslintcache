[{"E:\\Project\\shopping\\src\\index.js":"1","E:\\Project\\shopping\\src\\App.js":"2","E:\\Project\\shopping\\src\\serviceWorker.js":"3","E:\\Project\\shopping\\src\\app\\store.js":"4","E:\\Project\\shopping\\src\\features\\counterSlice.js":"5","E:\\Project\\shopping\\src\\user\\Carousel.js":"6","E:\\Project\\shopping\\src\\user\\Example.js":"7","E:\\Project\\shopping\\src\\user\\OutlinedCard.js":"8","E:\\Project\\shopping\\src\\user\\Login\\Login.js":"9","E:\\Project\\shopping\\src\\user\\SignUp\\SignUp.js":"10","E:\\Project\\shopping\\src\\user\\Header\\Header.js":"11","E:\\Project\\shopping\\src\\user\\Sidebar\\SideBar.js":"12","E:\\Project\\shopping\\src\\user\\Footer\\Footer.js":"13","E:\\Project\\shopping\\src\\user\\ProductSlider\\ProductSlider.js":"14","E:\\Project\\shopping\\src\\user\\DATA.js":"15","E:\\Project\\shopping\\src\\user\\Description\\Description.js":"16","E:\\Project\\shopping\\src\\user\\List\\DisplayList.js":"17","E:\\Project\\shopping\\src\\user\\List\\DisplayProduct.js":"18","E:\\Project\\shopping\\src\\user\\Cart\\Cart.js":"19","E:\\Project\\shopping\\src\\axios.js":"20","E:\\Project\\shopping\\src\\FirebaseConfig\\firebase.js":"21","E:\\Project\\shopping\\src\\features\\userSlice.js":"22","E:\\Project\\shopping\\src\\user\\Header\\LoginLogoutDropdown.js":"23","E:\\Project\\shopping\\src\\features\\cartSlice.js":"24","E:\\Project\\shopping\\src\\user\\Category\\Category.js":"25","E:\\Project\\shopping\\src\\user\\Checkout\\Checkout.js":"26","E:\\Project\\shopping\\src\\user\\Checkout\\AddressForm.js":"27","E:\\Project\\shopping\\src\\user\\Checkout\\PaymentForm.js":"28","E:\\Project\\shopping\\src\\user\\Checkout\\Review.js":"29","E:\\Project\\shopping\\src\\user\\Checkout\\Payment.js":"30","E:\\Project\\shopping\\src\\features\\addressForm.js":"31","E:\\Project\\shopping\\src\\user\\Order\\Orders.js":"32","E:\\Project\\shopping\\src\\user\\Order\\Order.js":"33","E:\\Project\\shopping\\src\\user\\Pending Orders\\PendingOrders.js":"34","E:\\Project\\shopping\\src\\user\\Pending Orders\\PendingOrder.js":"35","E:\\Project\\shopping\\src\\user\\Pending Orders\\Status.js":"36"},{"size":623,"mtime":1613361182000,"results":"37","hashOfConfig":"38"},{"size":4798,"mtime":1617087595320,"results":"39","hashOfConfig":"38"},{"size":5004,"mtime":1613361182000,"results":"40","hashOfConfig":"38"},{"size":428,"mtime":1616432127528,"results":"41","hashOfConfig":"38"},{"size":1509,"mtime":1613361182000,"results":"42","hashOfConfig":"38"},{"size":2338,"mtime":1615703102868,"results":"43","hashOfConfig":"38"},{"size":1739,"mtime":1616078289429,"results":"44","hashOfConfig":"38"},{"size":2414,"mtime":1615914466919,"results":"45","hashOfConfig":"38"},{"size":5278,"mtime":1616329981199,"results":"46","hashOfConfig":"38"},{"size":4631,"mtime":1616330039366,"results":"47","hashOfConfig":"38"},{"size":2359,"mtime":1614090737184,"results":"48","hashOfConfig":"38"},{"size":3416,"mtime":1617087353479,"results":"49","hashOfConfig":"38"},{"size":2251,"mtime":1613361182000,"results":"50","hashOfConfig":"38"},{"size":4754,"mtime":1616003179692,"results":"51","hashOfConfig":"38"},{"size":11105,"mtime":1613653542035,"results":"52","hashOfConfig":"38"},{"size":15575,"mtime":1616334023399,"results":"53","hashOfConfig":"38"},{"size":4048,"mtime":1616259285615,"results":"54","hashOfConfig":"38"},{"size":1368,"mtime":1617093094128,"results":"55","hashOfConfig":"38"},{"size":14868,"mtime":1616588704968,"results":"56","hashOfConfig":"38"},{"size":197,"mtime":1613477704244,"results":"57","hashOfConfig":"38"},{"size":553,"mtime":1613888600561,"results":"58","hashOfConfig":"38"},{"size":462,"mtime":1614008687929,"results":"59","hashOfConfig":"38"},{"size":3571,"mtime":1615574079904,"results":"60","hashOfConfig":"38"},{"size":3805,"mtime":1616398538163,"results":"61","hashOfConfig":"38"},{"size":1179,"mtime":1616174951007,"results":"62","hashOfConfig":"38"},{"size":5987,"mtime":1616587936429,"results":"63","hashOfConfig":"38"},{"size":4973,"mtime":1616580202917,"results":"64","hashOfConfig":"38"},{"size":767,"mtime":1616419300814,"results":"65","hashOfConfig":"38"},{"size":2653,"mtime":1616434678623,"results":"66","hashOfConfig":"38"},{"size":7863,"mtime":1616921869805,"results":"67","hashOfConfig":"38"},{"size":667,"mtime":1616587136940,"results":"68","hashOfConfig":"38"},{"size":1352,"mtime":1617086554755,"results":"69","hashOfConfig":"38"},{"size":4297,"mtime":1616920997656,"results":"70","hashOfConfig":"38"},{"size":1415,"mtime":1617096621992,"results":"71","hashOfConfig":"38"},{"size":4441,"mtime":1617088612358,"results":"72","hashOfConfig":"38"},{"size":5889,"mtime":1617096464348,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1ey9qb1",{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"76"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Project\\shopping\\src\\index.js",[],["166","167"],"E:\\Project\\shopping\\src\\App.js",["168","169","170","171","172"],"E:\\Project\\shopping\\src\\serviceWorker.js",[],"E:\\Project\\shopping\\src\\app\\store.js",[],"E:\\Project\\shopping\\src\\features\\counterSlice.js",[],"E:\\Project\\shopping\\src\\user\\Carousel.js",["173","174"],"import React, { createRef, useState } from \"react\";\nimport CarouselSlider from \"react-carousel-slider\";\nimport \"./Carousel.css\";\nfunction Carousel() {\n  const [image, setImage] = useState([\n    {\n      id: 1,\n      imgSrc:\n        \"https://images-eu.ssl-images-amazon.com/images/G/31/img21/Wireless/Xiaomi/RedmiNote9Series/Mob_Hero_1242x450._CB660800169_SY250_.jpg\",\n    },\n    {\n      id: 2,\n      imgSrc:\n        \"https://images-eu.ssl-images-amazon.com/images/G/31/img20/Wireless/WLA/Jan21/Headset/D20517472_WLA_BAU_OnePlus_Buds_Z_Mobile_hero_1242x450._CB660829695_SY250_.jpg\",\n    },\n    {\n      id: 3,\n      imgSrc:\n        \"https://images-eu.ssl-images-amazon.com/images/G/31/img20/Wireless/JanART21/TailBrands/mobhero_1242x450._CB660604674_SY250_.jpg\",\n    },\n    {\n      id: 4,\n      imgSrc:\n        \"https://images-eu.ssl-images-amazon.com/images/G/31/img20/Wireless/Xiaomi/Redmi_9Power/PostJanArt/D19338206_WLM_Redmi_9Power_Launch_mobhero._CB662599013_SY250_.jpg\",\n    },\n  ]);\n  let manner = {\n    autoSliding: { interval: \"5s\" },\n    duration: \"2s\",\n  };\n  let itemsStyle = {\n    height: \"300px\",\n    width: \"100vw\",\n    background: \"transparent\",\n    border: \"1px solid #e1e4e8\",\n    borderRadius: \"2px\",\n  };\n\n  //   let accEleSetting;\n  let sliderBoxStyle = {\n    height: \"320px\",\n    // marginLeft: \"10px\",\n    // marginRight: \"10px\",\n    width: \"98%\",\n    background: \"transparent\",\n    border: \"1px solid #e1e4e8\",\n  };\n\n  let buttonSetting = {\n    placeOn: \"middle-inside\",\n    hoverEvent: true,\n    style: {\n      left: {\n        height: \"50px\",\n        width: \"50px\",\n        color: \"#929393\",\n        background: \"rgba(225, 228, 232, 0.8)\",\n        borderRadius: \"50%\",\n      },\n      right: {\n        height: \"50px\",\n        width: \"50px\",\n        color: \"#929393\",\n        background: \"rgba(225, 228, 232, 0.8)\",\n        borderRadius: \"50%\",\n      },\n    },\n  };\n  let rcs_sliderBox = {\n    height: \"150px\",\n    transform: \"translateX(-2500px)\",\n    transition: \" transform 2s ease 0s\",\n  };\n  return (\n    <div>\n      <CarouselSlider\n        className=\"carouselSlider\"\n        style={rcs_sliderBox}\n        slideItems={image}\n        manner={manner}\n        sliderBoxStyle={sliderBoxStyle}\n        buttonSetting={buttonSetting}\n        itemsStyle={itemsStyle}\n      />\n    </div>\n  );\n}\n\nexport default Carousel;\n","E:\\Project\\shopping\\src\\user\\Example.js",["175","176","177","178","179","180","181"],"import React, { Component, useState, useEffect } from \"react\";\nimport { Carousel } from \"react-circular-carousel\";\nimport \"react-circular-carousel/dist/index.css\";\nimport OutlinedCard from \"./OutlinedCard\";\nimport \"./Example.css\";\nimport { DATA } from \"./DATA\";\nimport axios from \"../axios\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Loading from \"../assets/images/Loading.gif\";\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\nfunction Example({ route }) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    let unmounted = false;\n\n    async function fetchData() {\n      const req = await axios\n        .get(`/${route}`)\n        .then((res) => {\n          if (!unmounted) {\n            setProducts(res.data);\n          }\n          setLoading(false);\n        })\n        .catch((error) => alert(error));\n    }\n    fetchData();\n\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  if (loading) {\n    return <img src={Loading} alt=\"loading\" className=\"loading\" />;\n  }\n  return (\n    <Carousel height={410} width={300} id={0} className=\"carousel\">\n      {products.slice(0, 5).map((item) => (\n        <OutlinedCard\n          key={item?._id}\n          id={item?._id}\n          img={item?.img}\n          name={item?.name}\n          rating={item?.rating}\n          discount={item?.discount}\n          price={item?.originalPrice}\n          route={route}\n        />\n      ))}\n    </Carousel>\n  );\n}\n\nexport default Example;\n","E:\\Project\\shopping\\src\\user\\OutlinedCard.js",["182","183","184"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport numeral from \"numeral\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    borderRadius: 15,\n    minWidth: 250,\n    minHeight: 370,\n    outline: \"none\",\n    border: \"1px solid rgba(0,0,0,9)\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontFamily: \"Quicksand, sans-serif\",\n    fontSize: 14,\n    fontWeight: 750,\n    marginTop: 10,\n    color: \"black\",\n    textAlign: \"center\",\n  },\n  pos: {\n    fontSize: 12,\n    textAlign: \"center\",\n    fontWeight: 600,\n    color: \"black\",\n    fontFamily: \"Times New Roman\",\n    background: \"transparent\",\n  },\n});\nfunction truncate(string, n) {\n  return string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\n}\n\nexport default function OutlinedCard({\n  id,\n  name,\n  rating,\n  price,\n  img,\n  discount,\n  route,\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n  const product = () => {\n    history.push(`/product-detail/${route}/${id}`);\n  };\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <img\n          src={img}\n          // height=\"250px\"\n          // width=\"220px\"\n          className=\"card__img\"\n        />\n\n        <div className=\"product__detail\">\n          <Typography\n            onClick={product}\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            {truncate(name, 45)}\n          </Typography>\n          <div className=\"detail\">\n            <Typography variant=\"h5\" component=\"h2\">\n              <Rating\n                name=\"read-only\"\n                value={rating}\n                precision={0.1}\n                readOnly\n              />\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              ₹ {numeral(price - price * (discount / 100)).format(\"0,0.00\")}\n            </Typography>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","E:\\Project\\shopping\\src\\user\\Login\\Login.js",["185","186","187","188"],"import React, { useEffect, useState } from \"react\";\nimport \"./util.css\";\nimport \"./Login.css\";\nimport Background from \"./background.jpg\";\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport { Divider } from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { auth } from \"../../FirebaseConfig/firebase\";\nimport { login, logout, selectUser } from \"../../features/userSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"../../axios\";\nfunction Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n\n  const signIn = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(username, password)\n      .then((authUser) => {\n        console.log(authUser);\n        const unsuscribe = auth.onAuthStateChanged((userAuth) => {\n          if (userAuth) {\n            let unmounted = false;\n            async function fetchData() {\n              const req = await axios\n                .get(`/user/${userAuth.uid}`)\n                .then((res) => {\n                  if (!unmounted) {\n                    dispatch(\n                      login({\n                        uid: res.data[0].uid,\n                        name: res.data[0].name,\n                      })\n                    );\n                  }\n                  setLoading(false);\n                  history.push(\"/\");\n                })\n                .catch((error) => {\n                  alert(error);\n                });\n            }\n            fetchData();\n            return () => {\n              unmounted = true;\n            };\n            //login\n          } else {\n            //logout\n            dispatch(logout());\n          }\n        });\n        return unsuscribe;\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n  return (\n    <div className=\"limiter\">\n      <div\n        className=\"container-login100\"\n        style={{\n          backgroundImage: `url(${Background})`,\n        }}\n      >\n        <div\n          className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-54\"\n          style={{\n            paddingLeft: \"55px\",\n            paddingRight: \"55px\",\n            paddingTop: \"65px\",\n            paddingBottom: \"54px\",\n          }}\n        >\n          <form className=\"login100-form validate-form\">\n            <span\n              className=\"login100-form-title p-b-49\"\n              style={{ paddingBottom: \"49px\" }}\n            >\n              Login\n            </span>\n\n            <div\n              className=\"wrap-input100 validate-input m-b-23\"\n              style={{ marginBottom: \"23px\" }}\n              data-validate=\"Username is required\"\n            >\n              <span className=\"label-input100\">Username</span>\n              <input\n                className=\"input100\"\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"Type your username\"\n                onChange={(e) => setUsername(e.target.value)}\n              />\n              <span className=\"focus-input100 focus__icon\">\n                <PermIdentityIcon />\n              </span>\n            </div>\n\n            <div\n              className=\"wrap-input100 validate-input\"\n              data-validate=\"Password is required\"\n            >\n              <span className=\"label-input100\">Password</span>\n              <input\n                className=\"input100\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Type your password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n\n              <span className=\"focus-input100 focus__icon\">\n                <LockIcon />\n              </span>\n            </div>\n\n            <div\n              className=\"text-right\"\n              style={{ paddingBottom: \"31px\", paddingTop: \"8px\" }}\n            >\n              {/* <a href=\"#\">Forgot password?</a> */}\n            </div>\n\n            <div className=\"container-login100-form-btn\">\n              <div className=\"wrap-login100-form-btn\">\n                <div className=\"login100-form-bgbtn\"></div>\n                <button className=\"login100-form-btn\" onClick={signIn}>\n                  Login\n                </button>\n              </div>\n            </div>\n            <Divider style={{ marginTop: \"40px\" }} />\n            <div\n              className=\"txt1 text-center\"\n              style={{ paddingBottom: \"20px\", paddingTop: \"20px\" }}\n            >\n              <span>Or Login Using</span>\n            </div>\n            <Divider style={{ marginTop: \"40px\" }} />\n            <div\n              className=\"txt1 text-center\"\n              style={{ paddingBottom: \"20px\", paddingTop: \"20px\" }}\n            >\n              <span>Or SignUp Using</span>\n              <br />\n              <Link to=\"/sign-up\">\n                <span className=\"txt2\">SignUp</span>\n              </Link>\n\n              {/* <a className=\"txt2\">Sign Up</a> */}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","E:\\Project\\shopping\\src\\user\\SignUp\\SignUp.js",["189"],"import React, { useRef } from \"react\";\nimport \"./util.css\";\nimport \"./SignUp.css\";\nimport Background from \"./background.jpg\";\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport { Divider } from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { auth } from \"../../FirebaseConfig/firebase\";\nimport axios from \"../../axios\";\nfunction Login() {\n  const emailRef = useRef(null);\n  const nameRef = useRef(null);\n  const passwordRef = useRef(null);\n  const history = useHistory();\n  const register = (e) => {\n    e.preventDefault();\n    auth\n      .createUserWithEmailAndPassword(\n        emailRef.current.value,\n        passwordRef.current.value\n      )\n      .then((authUser) => {\n        console.log(authUser.user.uid);\n        console.log(nameRef);\n\n        function sendData() {\n          const req = axios\n            .post(`/user`, {\n              name: nameRef.current.value,\n              uid: authUser.user.uid,\n            })\n            .then((res) => {\n              history.push(\"/login\");\n            })\n            .catch((error) => alert(error));\n        }\n        sendData();\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n  return (\n    <div className=\"limiter\">\n      <div\n        className=\"container-login100\"\n        style={{\n          backgroundImage: `url(${Background})`,\n        }}\n      >\n        <div\n          className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-54\"\n          style={{\n            paddingLeft: \"55px\",\n            paddingRight: \"55px\",\n            paddingTop: \"65px\",\n            paddingBottom: \"54px\",\n          }}\n        >\n          <form className=\"login100-form validate-form\">\n            <span\n              className=\"login100-form-title p-b-49\"\n              style={{ paddingBottom: \"49px\" }}\n            >\n              Sign Up\n            </span>\n            <div\n              className=\"wrap-input100 validate-input m-b-23\"\n              style={{ marginBottom: \"23px\" }}\n            >\n              <span className=\"label-input100\">Enter Name</span>\n              <input\n                ref={nameRef}\n                className=\"input100\"\n                type=\"text\"\n                name=\"fname\"\n                placeholder=\"Enter Name\"\n              />\n              <span className=\"focus-input100 focus__icon\">\n                <CreateIcon />\n              </span>\n            </div>\n            <div\n              className=\"wrap-input100 validate-input m-b-23\"\n              style={{ marginBottom: \"23px\" }}\n            >\n              <span className=\"label-input100\">Username</span>\n              <input\n                className=\"input100\"\n                type=\"email\"\n                ref={emailRef}\n                name=\"username\"\n                placeholder=\"Type your username\"\n              />\n              <span className=\"focus-input100 focus__icon\">\n                <PermIdentityIcon />\n              </span>\n            </div>\n\n            <div className=\"wrap-input100 validate-input\">\n              <span className=\"label-input100\">Password</span>\n              <input\n                ref={passwordRef}\n                className=\"input100\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Type your password\"\n              />\n              <span className=\"focus-input100 focus__icon\">\n                <LockIcon />\n              </span>\n            </div>\n\n            <div\n              className=\"text-right\"\n              style={{ paddingBottom: \"31px\", paddingTop: \"8px\" }}\n            >\n              {/* <a href=\"#\">Forgot password?</a> */}\n            </div>\n\n            <div className=\"container-login100-form-btn\">\n              <div className=\"wrap-login100-form-btn\">\n                <div className=\"login100-form-bgbtn\"></div>\n                <button className=\"login100-form-btn\" onClick={register}>\n                  Sign Up\n                </button>\n              </div>\n            </div>\n            <Divider style={{ marginTop: \"40px\" }} />\n            <div\n              className=\"txt1 text-center\"\n              style={{ paddingBottom: \"20px\", paddingTop: \"20px\" }}\n            >\n              <span>Already a user?</span>\n              <br />\n              <Link to=\"/login\">\n                <span className=\"txt2\">Login</span>\n              </Link>\n\n              {/* <a className=\"txt2\">Sign Up</a> */}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","E:\\Project\\shopping\\src\\user\\Header\\Header.js",["190","191","192","193"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport \"./Header.css\";\nimport SideBar from \"../Sidebar/SideBar\";\nimport { Link } from \"react-router-dom\";\nimport { selectBasket } from \"../../features/cartSlice\";\nimport { login, logout, selectUser } from \"../../features/userSlice\";\nimport { useSelector } from \"react-redux\";\nimport LoginLogoutDropdown from \"./LoginLogoutDropdown\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: \"#05386b\",\n    fontWeight: \"bold\",\n    fontFamily: \"Dancing Script, cursive\",\n    letterSpacing: \"0.130rem\",\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  const user = useSelector(selectUser);\n  const basket = useSelector(selectBasket);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            {/* <MenuIcon /> */}\n            <SideBar />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Shoppers\n          </Typography>\n          <Link to=\"/cart\">\n            <IconButton className=\"header__iconCart\">\n              <ShoppingCartIcon className=\"header__cart\" />\n              <span className=\"header__cartCount\">{basket?.length}</span>\n            </IconButton>\n          </Link>\n          {!user ? (\n            <Link to=\"/login\">\n              <Button\n                color=\"inherit\"\n                className=\"header__login\"\n                endIcon={<ExitToAppIcon />}\n              >\n                Login\n              </Button>\n            </Link>\n          ) : (\n            <LoginLogoutDropdown />\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","E:\\Project\\shopping\\src\\user\\Sidebar\\SideBar.js",["194","195"],"import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\nimport \"./SideBar.css\";\nimport { Divider, List, ListItem, ListItemIcon } from \"@material-ui/core\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport EmptyCart from \"../../assets/images/empty_cart_image.jpg\";\nimport { Link } from \"react-router-dom\";\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\n\nexport default function TemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <Link to=\"/\">\n        <div className=\"sidebar__logo\">\n          <img src={EmptyCart} alt=\"\" className=\"sidebar__img\" />\n        </div>\n      </Link>\n      <Divider />\n      <List>\n        <ListItem button>\n          <Link to=\"/orders\">\n            <div className=\"sidebar__menuItem\">\n              <ListItemIcon>\n                <ShoppingBasketIcon className=\"sidebar__menuIcon\" />\n              </ListItemIcon>\n              <ListItemText primary=\"Orders\" className=\"sidebar__menuName\" />\n            </div>\n          </Link>\n        </ListItem>\n        <ListItem button>\n          <Link to=\"/cart\">\n            <div className=\"sidebar__menuItem\">\n              <ListItemIcon>\n                <ShoppingCartIcon className=\"sidebar__menuIcon\" />\n              </ListItemIcon>\n              <ListItemText primary=\"Cart\" className=\"sidebar__menuName\" />\n            </div>\n          </Link>\n        </ListItem>\n        <ListItem button>\n          <Link to=\"/pending-orders\">\n            <div className=\"sidebar__menuItem\">\n              <ListItemIcon>\n                <ScheduleIcon className=\"sidebar__menuIcon\" />\n              </ListItemIcon>\n              <ListItemText\n                primary=\"Pending Orders\"\n                className=\"sidebar__menuName\"\n              />\n            </div>\n          </Link>\n        </ListItem>\n      </List>\n      ;\n    </div>\n  );\n\n  return (\n    <div>\n      {[\"left\"].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)}>\n            <MenuIcon />\n          </Button>\n          <Drawer\n            anchor={anchor}\n            className=\"sidebar__navigation\"\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n          >\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","E:\\Project\\shopping\\src\\user\\Footer\\Footer.js",[],"E:\\Project\\shopping\\src\\user\\ProductSlider\\ProductSlider.js",["196","197","198","199"],"import React, { useState, useEffect } from \"react\";\nimport CarouselSlider from \"react-carousel-slider\";\nimport \"./ProductSlider.css\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { DATA } from \"../DATA\";\nimport axios from \"../../axios\";\nimport numeral from \"numeral\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport { useHistory } from \"react-router-dom\";\nimport Loading from \"../../assets/images/Loading.gif\";\n// import url('https://fonts.googleapis.com/css2?family=Quicksand&display=swap');\nfunction ProductSlider({ route }) {\n  const [mobiles, setMobiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    let unmounted = false;\n\n    async function fetchData() {\n      const req = await axios\n        .get(`/${route}`)\n        .then((res) => {\n          if (!unmounted) {\n            setMobiles(res.data);\n          }\n          setLoading(false);\n        })\n        .catch((error) => alert(error));\n    }\n    fetchData();\n\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  let itemsStyle = {\n    padding: \"0px\",\n    background: \"white\",\n    marginLeft: \"20px\",\n    marginRight: \"20px\",\n    boxShadow: \"1px 1px #9E9E9E\",\n    borderRadius: \"15px\",\n    border: \"1px solid black\",\n  };\n\n  let imgStyle = {\n    height: \"60%\",\n    padding: \"10px\",\n    width: \"150px\",\n    left: 0,\n    right: 0,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    borderBottom: \"1px solid #9E9E9E\",\n  };\n\n  function truncate(string, n) {\n    return string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\n  }\n\n  let textBoxStyle = {\n    fontFamily: \"Quicksand, sans-serif\",\n    cursor: \"pointer\",\n    width: \"100%\",\n    top: \"260px\",\n    color: \"black\",\n    left: 0,\n    right: 0,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    background: \"transparent\",\n    fontSize: \"12px\",\n    fontWeight: \"800\",\n  };\n\n  let textBoxStyle2 = {\n    width: \"100%\",\n    top: \"340px\",\n    color: \"black\",\n    fontFamily: \"Times New Roman\",\n    background: \"transparent\",\n    fontSize: \"13px\",\n    fontWeight: \"700\",\n  };\n  let rating = {\n    marginLeft: \"40px\",\n    top: \"80px\",\n  };\n\n  // let scientists = DATA.map((item) => (\n  //   <div key={item.id}>\n  //     <img style={imgStyle} src={item.img}></img>\n  //     <p style={textBoxStyle}>{truncate(item.name, 50)}</p>\n  //     <Rating style={rating} name=\"read-only\" value={item.rating} readOnly />\n  //     <p style={textBoxStyle2}>{item.price}</p>\n  //   </div>\n  //   // <MediaCard image={item.imgSrc} p1={item.name} p2={item.des} />\n  // ));\n  const history = useHistory();\n\n  let scientists = mobiles.map((item) => (\n    <div key={item._id}>\n      <img style={imgStyle} src={item.img}></img>\n      <p\n        style={textBoxStyle}\n        onClick={() => {\n          history.push(`/product-detail/${route}/${item._id}`);\n        }}\n      >\n        {truncate(item.name, 50)}\n      </p>\n      <Rating\n        style={rating}\n        name=\"read-only\"\n        precision={0.1}\n        value={item.rating}\n        readOnly\n      />\n      <p style={textBoxStyle2}>\n        {\" \"}\n        ₹{\" \"}\n        {numeral(\n          item.originalPrice - item.originalPrice * (item.discount / 100)\n        ).format(\"0,0.00\")}\n      </p>\n    </div>\n    // <MediaCard image={item.imgSrc} p1={item.name} p2={item.des} />\n  ));\n\n  let btnWrapperStyle = {\n    position: \"relative\",\n    borderRadius: \"50%\",\n    height: \"50px\",\n    width: \"50px\",\n    boxShadow: \"1px 1px 1px 1px transparent\",\n    textAlign: \"center\",\n  };\n\n  let btnStyle = {\n    display: \"inline-block\",\n    position: \"relative\",\n    top: \"25%\",\n    transform: \"translateY(-40%)\",\n    fontSize: \"46px\",\n  };\n\n  let rBtnCpnt = (\n    <div style={btnWrapperStyle}>\n      <div style={btnStyle} className=\"material-icons\">\n        <ChevronRightIcon />\n      </div>\n    </div>\n  );\n\n  let lBtnCpnt = (\n    <div style={btnWrapperStyle}>\n      <div style={btnStyle} className=\"material-icons\">\n        <ChevronLeftIcon />\n      </div>\n    </div>\n  );\n\n  let scientistsCard = (\n    <CarouselSlider\n      sliderBoxStyle={{\n        height: \"450px\",\n        width: \"100%\",\n        background: \"transparent\",\n      }}\n      accEle={{ dots: false }}\n      slideCpnts={scientists}\n      itemsStyle={itemsStyle}\n      buttonSetting={{ placeOn: \"middle-outside\" }}\n      rBtnCpnt={rBtnCpnt}\n      lBtnCpnt={lBtnCpnt}\n    />\n  );\n  if (loading) {\n    return <img src={Loading} alt=\"loading\" className=\"loading\" />;\n  }\n  return (\n    <>\n      <div\n        style={{\n          position: \"relative\",\n          margin: \"0 auto\",\n          width: \"97%\",\n        }}\n      >\n        {scientistsCard}\n      </div>\n    </>\n  );\n}\n\nexport default ProductSlider;\n","E:\\Project\\shopping\\src\\user\\DATA.js",[],"E:\\Project\\shopping\\src\\user\\Description\\Description.js",["200","201","202","203","204","205","206","207"],"import React, { useState, useEffect } from \"react\";\nimport \"./Description.css\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport ShowMoreText from \"react-show-more-text\";\nimport { Button, Divider, Typography } from \"@material-ui/core\";\nimport IconReturn from \"./../../assets/images/IconReturn.png\";\nimport IconDelivered from \"./../../assets/images/IconDelivered.png\";\nimport IconNoContact from \"./../../assets/images/IconNoContactDelivery.png\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport IconWaranty from \"./../../assets/images/IconWarranty.png\";\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"../../axios\";\nimport numeral from \"numeral\";\nimport Loading from \"../../assets/images/Loading.gif\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport {\n  EMPTY_BASKET,\n  ADD_TO_BASKET,\n  REMOVE_FROM_CART,\n  selectBasket,\n} from \"../../features/cartSlice\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport moment from \"moment\";\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    minWidth: 120,\n    marginLeft: 30,\n  },\n  selectEmpty: {},\n}));\nfunction Description() {\n  const classes = useStyles();\n\n  const { route, product_id } = useParams();\n  const [product, setProduct] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [productExist, setProductExist] = useState(false);\n  const [cartValue, setCartValue] = useState(1);\n  const dispatch = useDispatch();\n  const basket = useSelector(selectBasket);\n  const user = useSelector(selectUser);\n  const history = useHistory();\n  const [size, setSize] = React.useState(\"\");\n  const [colors, setColors] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setSize(event.target.value);\n  };\n\n  const handleColorChange = (event) => {\n    setColors(event.target.value);\n  };\n  console.log(route, product_id);\n  useEffect(() => {\n    basket.map((product) => {\n      if (product.id === product_id) {\n        setProductExist(true);\n      }\n    });\n  }, [basket]);\n\n  const addToCart = () => {\n    dispatch(\n      ADD_TO_BASKET({\n        id: product._id,\n        userid: user.uid,\n        name: product.name,\n        img: product.img,\n        originalPrice: product.originalPrice,\n        rating: product.rating,\n        seller: product.seller,\n        discount: product.discount,\n        totalStock: product.totalStock,\n        cartValue: cartValue,\n        category: product.category,\n      })\n    );\n  };\n\n  const addToCartMensWear = () => {\n    dispatch(\n      ADD_TO_BASKET({\n        id: product._id,\n        userid: user.uid,\n        name: product.name,\n        img: product.img,\n        originalPrice: product.originalPrice,\n        rating: product.rating,\n        seller: product.seller,\n        discount: product.discount,\n        totalStock: product.totalStock,\n        cartValue: cartValue,\n        size: size,\n        color: colors,\n        dataSize: product.size,\n        dataColor: product.color,\n        category: product.category,\n      })\n    );\n  };\n\n  const goToCart = () => {\n    history.push(\"/cart\");\n  };\n\n  const decrementCounter = () => {\n    if (cartValue === 1) {\n      //redux\n      return cartValue;\n    } else {\n      setCartValue(cartValue - 1);\n    }\n  };\n\n  const incrementCounter = () => {\n    //redux\n    setCartValue(cartValue + 1);\n  };\n  useEffect(() => {\n    let unmounted = false;\n\n    async function fetchData() {\n      const req = await axios\n        .get(`/products/${route}/${product_id}`)\n        .then((res) => {\n          if (!unmounted) {\n            setProduct(res.data);\n          }\n          setLoading(false);\n        })\n        .catch((error) => alert(error));\n    }\n    fetchData();\n\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n  if (loading) {\n    return <img src={Loading} alt=\"loading\" className=\"loading\" />;\n  }\n  // const [description, setDescription] = useState([\n  //   `Triple Camera Setup - 48MP (F2.0) Main Camera +8MP (F2.2) Ultra Wide Camera +5MP(F2.2) Depth Camera and 20MP (F2.2) front facing Punch Hole Camera`,\n  //   \"6.4-inch(16.21 centimeters) Super Amoled - Infinity U Cut Display , FHD+ Resolution (2340 x 1080) , 404 ppi pixel density and 16M color support\",\n  //   \"Android 10.0 operating system with Exynos 9611,2.3GHz,1.7GHz Octa-Core processor, 6GB RAM, 128GB internal memory expandable up to 512GB and dual SIM\",\n  //   \"6000 mAh Battery\",\n  //   \"1 year manufacturer warranty for device and 6 months manufacturer warranty for in-box accessories including batteries from the date of purchase\",\n  // ]);\n\n  return (\n    <div className=\"description\" key={product._id}>\n      <div className=\"description__left\">\n        <div className=\"description__imageContainer\">\n          <img className=\"description__image\" src={product.img} alt=\"\" />\n        </div>\n      </div>\n      <div className=\"description__right\">\n        <div className=\"product__title\">{product.name}</div>\n        <div className=\"product__brand\">\n          Brand : <span className=\"brand__name\">{product.seller}</span>\n        </div>\n        <div className=\"product__rating\">\n          <Rating\n            name=\"read-only\"\n            value={product.rating}\n            readOnly\n            precision={0.1}\n          />\n        </div>\n        <Divider />\n        <div className=\"description__product__price\">\n          <div className=\"description__product__mrp\">\n            Original M.R.P. :{\" \"}\n            <strike className=\"description__mrp\">\n              ₹ {numeral(product.originalPrice).format(\"0,0\")}\n            </strike>\n          </div>\n          <br />\n          <div className=\"description__productPrice\">\n            Our Price :{\" \"}\n            <span className=\"description__price\">\n              ₹{\" \"}\n              {numeral(\n                product.originalPrice -\n                  product.originalPrice * (product.discount / 100)\n              ).format(\"0,0.00\")}\n            </span>\n          </div>\n          <br />\n          <div className=\"description__product__priceSave\">\n            You Save :{\" \"}\n            <span className=\"description__price\">\n              {\" \"}\n              ₹{\" \"}\n              {numeral(product.originalPrice * (product.discount / 100)).format(\n                \"0,0.00\"\n              )}{\" \"}\n              ({product.discount}%)\n            </span>\n          </div>\n        </div>\n        {product.stock && (\n          <div className=\"product__delivery\">\n            Estimated delivery date : By{\" \"}\n            {moment().add(product.deliveredBy, \"day\").calendar()}\n          </div>\n        )}\n\n        <div className=\"product__delivery__info\">\n          <div className=\"product__info\">\n            <img src={IconReturn} alt=\"\" />\n            <span className=\"return\">7 Days Replacement</span>\n          </div>\n          <div className=\"product__info\">\n            <img src={IconDelivered} alt=\"\" />\n            <span className=\"return\">Shoppers Delivered</span>\n          </div>\n          <div className=\"product__info\">\n            <img src={IconWaranty} alt=\"\" />\n            <span className=\"return\">Waranty</span>\n          </div>\n          <div className=\"product__info\">\n            <img src={IconNoContact} alt=\"\" />\n            <span className=\"return\">No-Contact Delivery</span>\n          </div>\n        </div>\n        {product.category === \"shirts\" && (\n          <>\n            <br />\n            <div className=\"description__size\">\n              <Typography\n                variant=\"h5\"\n                component=\"h4\"\n                className=\"description__typographySize\"\n              >\n                Size\n              </Typography>\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Size</InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={size}\n                  onChange={handleChange}\n                >\n                  {product.size.map((size) => (\n                    <MenuItem value={size.size}>{size.size}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </div>\n          </>\n        )}\n        {product.category === \"shirts\" && (\n          <>\n            <br />\n            <div className=\"description__size\">\n              <Typography\n                variant=\"h5\"\n                component=\"h4\"\n                className=\"description__typographySize\"\n              >\n                Colors\n              </Typography>\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Colors</InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={colors}\n                  onChange={handleColorChange}\n                >\n                  {product.color.map((color) => (\n                    <MenuItem value={color}>{color}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </div>\n          </>\n        )}\n        {product.category === \"shirts\" && (\n          <>\n            <br />\n            <div className=\"description__size\">\n              <Typography\n                variant=\"h5\"\n                component=\"h4\"\n                className=\"description__typographySize\"\n              >\n                Quantity\n              </Typography>\n            </div>\n            <br />\n            {productExist ? (\n              <Button className=\"addToCart\" onClick={goToCart}>\n                Go to Cart\n              </Button>\n            ) : (\n              product.size.map((productsize) => (\n                <>\n                  {productsize.size === size && (\n                    <>\n                      {\" \"}\n                      <div className=\"description__cart__button\">\n                        <div className=\"description__cart__addRemoveButton\">\n                          <Button\n                            onClick={decrementCounter}\n                            disabled={cartValue !== 1 ? false : true}\n                          >\n                            -\n                          </Button>\n                          <input\n                            type=\"number\"\n                            className=\"description__cartValue\"\n                            value={cartValue}\n                            readOnly\n                          />\n                          <Button\n                            onClick={incrementCounter}\n                            disabled={\n                              cartValue !== productsize.totalStock\n                                ? false\n                                : true\n                            }\n                          >\n                            +\n                          </Button>\n                        </div>\n                      </div>\n                      <br />\n                      <Button className=\"addToCart\" onClick={addToCartMensWear}>\n                        Add to Cart\n                      </Button>\n                    </>\n                  )}\n                </>\n              ))\n            )}\n          </>\n        )}\n        {product.stock ? (\n          product.category !== \"shirts\" && (\n            <>\n              <div className=\"product__inStock\">In Stock</div>\n              <br />\n              {productExist ? (\n                <Button className=\"addToCart\" onClick={goToCart}>\n                  Go to Cart\n                </Button>\n              ) : (\n                <>\n                  {product.category !== \"shirts\" && (\n                    <>\n                      <div className=\"description__cart__button\">\n                        <h3>Quantity</h3>\n                        <div className=\"description__cart__addRemoveButton\">\n                          <Button\n                            onClick={decrementCounter}\n                            disabled={cartValue !== 1 ? false : true}\n                          >\n                            -\n                          </Button>\n                          <input\n                            type=\"number\"\n                            className=\"description__cartValue\"\n                            value={cartValue}\n                            readOnly\n                          />\n                          <Button\n                            onClick={incrementCounter}\n                            disabled={\n                              cartValue !== product.totalStock ? false : true\n                            }\n                          >\n                            +\n                          </Button>\n                        </div>\n                      </div>\n                      <br />\n                      <Button className=\"addToCart\" onClick={addToCart}>\n                        Add to Cart\n                      </Button>\n                    </>\n                  )}\n                  {/* <div className=\"description__cart__button\">\n                  <h3>Quantity</h3>\n                  <div className=\"description__cart__addRemoveButton\">\n                    <Button\n                      onClick={decrementCounter}\n                      disabled={cartValue !== 1 ? false : true}\n                    >\n                      -\n                    </Button>\n                    <input\n                      type=\"number\"\n                      className=\"description__cartValue\"\n                      value={cartValue}\n                      readOnly\n                    />\n                    <Button\n                      onClick={incrementCounter}\n                      disabled={cartValue !== product.totalStock ? false : true}\n                    >\n                      +\n                    </Button>\n                  </div>\n                </div> \n                <br />\n                <Button className=\"addToCart\" onClick={addToCart}>\n                  Add to Cart\n                </Button>*/}\n                </>\n              )}\n            </>\n          )\n        ) : (\n          <div className=\"product__outOfStock\">Out Of Stock</div>\n        )}\n\n        <div className=\"product__description\">\n          <h2>Specification</h2>\n          <Divider light className=\"divider\" />\n          <div className=\"content-css\">\n            <ShowMoreText\n              /* Default options */\n              lines={2}\n              className=\"content-css\"\n              anchorClass=\"my-anchor-css-class\"\n              more=\"Read more ▼\"\n              less=\"Read less ▲\"\n              className=\"content-css\"\n              expanded={false}\n            >\n              {\" \"}\n              {product.description.map((item) => (\n                <div className=\"desc\">\n                  <FiberManualRecordIcon className=\"dot__icon\" />\n                  {item}\n                </div>\n              ))}\n            </ShowMoreText>\n          </div>\n          {/* {description.map((item) => (\n            <div className=\"desc\">\n              <FiberManualRecordIcon className=\"dot__icon\" />\n\n              {item}\n            </div>\n          ))} */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Description;\n","E:\\Project\\shopping\\src\\user\\List\\DisplayList.js",["208"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport \"./DisplayProduct.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport numeral from \"numeral\";\nimport { useHistory, useParams } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"98%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: \"inline\",\n    marginTop: 10,\n    paddingTop: 10,\n  },\n  list: {\n    paddingLeft: 40,\n    cursor: \"pointer\",\n  },\n}));\n\nexport default function DisplayList(data, productcategory) {\n  const classes = useStyles();\n  const history = useHistory();\n  const { category } = useParams();\n\n  const viewProduct = (id) => {\n    console.log(id);\n    let productid = id;\n    history.push(\"/product-detail/\" + category + \"/\" + productid);\n  };\n  return (\n    <List className={classes.root}>\n      {data.data.map((product) => (\n        <React.Fragment>\n          <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n              <div className=\"product__image\">\n                <img\n                  src={product.img}\n                  alt=\"\"\n                  width={130}\n                  height={150}\n                  className=\"product__image\"\n                />\n              </div>\n            </ListItemAvatar>\n\n            <ListItemText\n              className={classes.list}\n              onClick={() => viewProduct(product._id)}\n              // onClick={(event) => {\n              //   history.replace(`/product-detail/${category}/${product._id}`);\n              // }}\n              primary={product.name}\n              secondary={\n                <React.Fragment>\n                  <Rating\n                    name=\"read-only\"\n                    value={product.rating}\n                    readOnly\n                    precision={0.1}\n                    style={{ marginTop: \"10px\" }}\n                  />\n                  <div className=\"display__product__price\">\n                    <div className=\"productPrice\">\n                      <span className=\"price\">\n                        Our Price: ₹{\" \"}\n                        {numeral(\n                          product.originalPrice -\n                            product.originalPrice * (product.discount / 100)\n                        ).format(\"0,0.00\")}\n                      </span>\n                    </div>\n                    <div>\n                      Original Price:{\" \"}\n                      <strike className=\"mrp\">\n                        ₹ {numeral(product.originalPrice).format(\"0,0\")}\n                      </strike>\n                    </div>\n                    <div className=\"product__priceSave\">\n                      You Save :{\" \"}\n                      <span className=\"price\">\n                        {\" \"}\n                        ₹{\" \"}\n                        {numeral(\n                          product.originalPrice * (product.discount / 100)\n                        ).format(\"0,0.00\")}{\" \"}\n                        ({product.discount}%)\n                      </span>\n                    </div>\n                  </div>\n                  <div style={{ marginTop: \"10px\" }} />\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    Brand :\n                  </Typography>{\" \"}\n                  {product.seller}\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n          <Divider variant=\"inset\" component=\"li\" />\n        </React.Fragment>\n      ))}\n    </List>\n  );\n}\n","E:\\Project\\shopping\\src\\user\\List\\DisplayProduct.js",["209","210","211"],"E:\\Project\\shopping\\src\\user\\Cart\\Cart.js",["212","213","214","215","216"],"import React, { useState } from \"react\";\nimport \"./Cart.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport numeral from \"numeral\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EmptyCart from \"../../assets/images/empty_cart_image.jpg\";\n// import CancelIcon from \"@material-ui/icons/Cancel\";\nimport {\n  EMPTY_BASKET,\n  ADD_TO_BASKET,\n  SET_SIZE,\n  SET_COLOR,\n  REMOVE_FROM_CART,\n  INCREMENT_BASKET_COUNT,\n  DECREMENT_BASKET_COUNT,\n  getBasketTotal,\n  selectBasket,\n} from \"../../features/cartSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Link, useHistory } from \"react-router-dom\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  formControl: {\n    minWidth: 120,\n    marginLeft: 30,\n  },\n  inline: {\n    display: \"inline\",\n    marginTop: 10,\n    paddingTop: 10,\n  },\n  list: {\n    paddingLeft: 40,\n  },\n}));\nfunction Cart() {\n  const classes = useStyles();\n  const [size, setSize] = React.useState(\"\");\n  const [colors, setColors] = React.useState(\"\");\n  const basket = useSelector(selectBasket);\n  // const total = useSelector(amount);\n  const total = useSelector(getBasketTotal);\n  console.log(\"the total is \", total);\n  console.log(basket);\n  const [cartValue, setCartValue] = useState();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const handleChange = (id, event) => {\n    console.log(event, id);\n    setSize(event.target.value);\n    console.log(\"Size=\", size);\n    dispatch(\n      SET_SIZE({\n        id: id,\n        size: size,\n      })\n    );\n  };\n\n  const handleColorChange = (id, event) => {\n    console.log(event, id);\n    setColors(event.target.value);\n    console.log(\"COlors=\", colors);\n    dispatch(\n      SET_COLOR({\n        id: id,\n        color: colors,\n      })\n    );\n  };\n  const decrementCounter = (id) => {\n    if (cartValue === 1) {\n      //redux\n      return cartValue;\n    } else {\n      dispatch(\n        DECREMENT_BASKET_COUNT({\n          id: id,\n        })\n      );\n    }\n  };\n\n  const incrementCounter = (id) => {\n    //redux\n    // setCartValue(cartValue + 1);\n\n    dispatch(\n      INCREMENT_BASKET_COUNT({\n        id: id,\n      })\n    );\n  };\n  const deleteItem = (id) => {\n    dispatch(\n      REMOVE_FROM_CART({\n        id: id,\n      })\n    );\n  };\n\n  if (basket.length === 0) {\n    return (\n      <div\n        style={{\n          paddingTop: \"170px\",\n          minHeight: \"350px\",\n          textAlign: \"center\",\n          fontSize: \"45px\",\n          paddingLeft: \"20px\",\n          paddingRight: \"20px\",\n          fontWeight: \"999\",\n          backgroundColor: \"rgb(246,246,246)\",\n        }}\n      >\n        <img\n          src={EmptyCart}\n          alt=\"\"\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n        />\n        <h1\n          className=\"cart__empty\"\n          style={{\n            marginTop: \"20px\",\n            textAlign: \"center\",\n            fontSize: \"55px\",\n            fontWeight: \"999\",\n          }}\n        >\n          Your Cart is Empty\n        </h1>\n      </div>\n    );\n  }\n  return (\n    <div className=\"cart\">\n      <div className=\"cart__left\">\n        {basket.map((product) => (\n          <List className={classes.root}>\n            <ListItem alignItems=\"flex-start\" key={product.id}>\n              <ListItemAvatar>\n                <div className=\"product__image\">\n                  <img\n                    src={product.img}\n                    alt={product.name}\n                    width={100}\n                    height={150}\n                    className=\"product__image\"\n                  />\n                </div>\n              </ListItemAvatar>\n              <ListItemText\n                className={classes.list}\n                primary={product.name}\n                secondary={\n                  <React.Fragment>\n                    <Rating\n                      name=\"read-only\"\n                      value={product.rating}\n                      readOnly\n                      precision={0.1}\n                      style={{ marginTop: \"10px\" }}\n                    />\n                    <div className=\"product__price\">\n                      <div className=\"productPrice\">\n                        <span className=\"price\">\n                          Our Price: ₹{\" \"}\n                          {numeral(\n                            product.originalPrice -\n                              product.originalPrice * (product.discount / 100)\n                          ).format(\"0,0.00\")}\n                        </span>\n                      </div>\n                      <div>\n                        Original Price:{\"  \"}\n                        <strike className=\"mrp\">\n                          ₹ {numeral(product.originalPrice).format(\"0,0\")}\n                        </strike>\n                      </div>\n                      <div className=\"product__priceSave\">\n                        You Save :{\" \"}\n                        <span className=\"price\">\n                          ₹{\" \"}\n                          {numeral(\n                            product.originalPrice * (product.discount / 100)\n                          ).format(\"0,0.00\")}{\" \"}\n                          ({product.discount}%)\n                        </span>\n                      </div>\n                    </div>\n                    <div style={{ marginTop: \"10px\" }} />\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      className={classes.inline}\n                      color=\"textPrimary\"\n                    >\n                      Brand :\n                    </Typography>\n                    {product.seller}\n                    <br />\n                    {product.category === \"shirts\" && (\n                      <>\n                        {product.category === \"shirts\" && (\n                          <>\n                            <br />\n                            <div className=\"cart__size\">\n                              <Typography\n                                variant=\"h5\"\n                                component=\"h4\"\n                                className=\"cart__typographySize\"\n                              >\n                                Size\n                              </Typography>\n                              <FormControl className={classes.formControl}>\n                                <InputLabel id=\"demo-simple-select-label\">\n                                  Size\n                                </InputLabel>\n                                <Select\n                                  labelId=\"demo-simple-select-label\"\n                                  id=\"demo-simple-select\"\n                                  value={product.size}\n                                  onChange={(e) => handleChange(product.id, e)}\n                                >\n                                  {product.dataSize.map((size) => (\n                                    <MenuItem value={size.size}>\n                                      {size.size}\n                                    </MenuItem>\n                                  ))}\n                                </Select>\n                              </FormControl>\n                            </div>\n                            <div className=\"cart__size\">\n                              <Typography\n                                variant=\"h5\"\n                                component=\"h4\"\n                                className=\"cart__typographySize\"\n                              >\n                                Colors\n                              </Typography>\n                              <FormControl className={classes.formControl}>\n                                <InputLabel id=\"demo-simple-select-label\">\n                                  Colors\n                                </InputLabel>\n                                <Select\n                                  labelId=\"demo-simple-select-label\"\n                                  id=\"demo-simple-select\"\n                                  value={product.color}\n                                  onChange={(e) =>\n                                    handleColorChange(product.id, e)\n                                  }\n                                >\n                                  {product.dataColor.map((color) => (\n                                    <MenuItem value={color}>{color}</MenuItem>\n                                  ))}\n                                </Select>\n                              </FormControl>\n                            </div>\n\n                            {/* Quantity */}\n                            {product.dataSize.map((productSize) => (\n                              <>\n                                {productSize.size === product.size && (\n                                  <div className=\"cart__button\">\n                                    <Typography\n                                      variant=\"h5\"\n                                      component=\"h4\"\n                                      className=\"cart__typographySize\"\n                                    >\n                                      Quantity\n                                    </Typography>\n                                    <div className=\"cart__addRemoveButton\">\n                                      <Button\n                                        onClick={() =>\n                                          decrementCounter(product.id)\n                                        }\n                                        disabled={\n                                          product.cartValue !== 1 ? false : true\n                                        }\n                                      >\n                                        -\n                                      </Button>\n                                      <input\n                                        type=\"number\"\n                                        className=\"cartValue\"\n                                        onChange={(e) =>\n                                          setCartValue(e.target.value)\n                                        }\n                                        value={product.cartValue}\n                                        readOnly\n                                      />\n                                      {/* <TextField id=\"standard-basic\" /> */}\n                                      <Button\n                                        onClick={() =>\n                                          incrementCounter(product.id)\n                                        }\n                                        disabled={\n                                          product.cartValue !==\n                                          productSize.totalStock\n                                            ? false\n                                            : true\n                                        }\n                                      >\n                                        +\n                                      </Button>\n                                    </div>\n                                    <DeleteForeverIcon\n                                      className=\"cancelIcon\"\n                                      onClick={() => deleteItem(product.id)}\n                                    />\n                                  </div>\n                                )}\n                              </>\n                            ))}\n                            {/* Quantity */}\n                          </>\n                        )}\n                      </>\n                    )}\n\n                    {product.category !== \"shirts\" && (\n                      <>\n                        <div className=\"cart__button\">\n                          <Typography\n                            variant=\"h5\"\n                            component=\"h4\"\n                            className=\"cart__typographySize\"\n                          >\n                            Quantity\n                          </Typography>\n                          <div className=\"cart__addRemoveButton\">\n                            <Button\n                              onClick={() => decrementCounter(product.id)}\n                              disabled={product.cartValue !== 1 ? false : true}\n                            >\n                              -\n                            </Button>\n                            <input\n                              type=\"number\"\n                              className=\"cartValue\"\n                              onChange={(e) => setCartValue(e.target.value)}\n                              value={product.cartValue}\n                              readOnly\n                            />\n                            {/* <TextField id=\"standard-basic\" /> */}\n                            <Button\n                              onClick={() => incrementCounter(product.id)}\n                              disabled={\n                                product.cartValue !== product.totalStock\n                                  ? false\n                                  : true\n                              }\n                            >\n                              +\n                            </Button>\n                          </div>\n                          <DeleteForeverIcon\n                            className=\"cancelIcon\"\n                            onClick={() => deleteItem(product.id)}\n                          />\n                        </div>\n                      </>\n                    )}\n                  </React.Fragment>\n                }\n              />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n          </List>\n        ))}\n      </div>\n      <Button\n        onClick={() => history.push(\"/checkout\")}\n        className=\"cart__checkoutButton\"\n      >\n        <ShoppingCartIcon className=\"cart__checkoutCartIcon\" />\n        Go For Checkout\n      </Button>\n    </div>\n  );\n}\n\nexport default Cart;\n","E:\\Project\\shopping\\src\\axios.js",[],"E:\\Project\\shopping\\src\\FirebaseConfig\\firebase.js",["217"],"import firebase from \"firebase\";\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBLAqJDYqXeHwZrxdECBczEdW5Npv-3618\",\r\n  authDomain: \"shoppers-7a58a.firebaseapp.com\",\r\n  projectId: \"shoppers-7a58a\",\r\n  storageBucket: \"shoppers-7a58a.appspot.com\",\r\n  messagingSenderId: \"394756975100\",\r\n  appId: \"1:394756975100:web:61ff6c54b4a9e649c4ea79\",\r\n  measurementId: \"G-T5DFD0ZJLT\",\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst auth = firebase.auth();\r\nexport { auth };\r\n","E:\\Project\\shopping\\src\\features\\userSlice.js",[],"E:\\Project\\shopping\\src\\user\\Header\\LoginLogoutDropdown.js",["218"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./LoginLogoutDropdown.css\";\r\nimport { auth } from \"../../FirebaseConfig/firebase\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { logout, selectUser } from \"../../features/userSlice\";\r\nimport { Divider } from \"@material-ui/core\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginRight: 5,\r\n    display: \"flex\",\r\n  },\r\n  paper: {\r\n    paddingLeft: 3,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function MenuListComposition() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const handlelogout = () => {\r\n    auth.signOut();\r\n    dispatch(logout());\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        ref={anchorRef}\r\n        aria-controls={open ? \"menu-list-grow\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleToggle}\r\n      >\r\n        <Avatar />\r\n      </IconButton>\r\n      {/* <Button\r\n        ref={anchorRef}\r\n        aria-controls={open ? \"menu-list-grow\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleToggle}\r\n      >\r\n        Toggle Menu Grow\r\n      </Button> */}\r\n      <Popper\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        disablePortal\r\n      >\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{\r\n              transformOrigin:\r\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n            }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList\r\n                  autoFocusItem={open}\r\n                  id=\"menu-list-grow\"\r\n                  onKeyDown={handleListKeyDown}\r\n                >\r\n                  <MenuItem disabled>{user.name}</MenuItem>\r\n                  <Divider light />\r\n                  <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                  <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                  <MenuItem onClick={handlelogout}>Logout</MenuItem>\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Project\\shopping\\src\\features\\cartSlice.js",[],"E:\\Project\\shopping\\src\\user\\Category\\Category.js",["219","220","221"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Category.css\";\r\n\r\nimport axios from \"../../axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Button } from \"@material-ui/core\";\r\nfunction Category() {\r\n  const history = useHistory();\r\n  const [categorys, setCategorys] = useState([\r\n    {\r\n      name: \"Mobiles\",\r\n      product: \"mobiles\",\r\n    },\r\n    {\r\n      name: \"Accessories\",\r\n      product: \"accessories\",\r\n    },\r\n    {\r\n      name: \"Mens Wear\",\r\n      product: \"menswear\",\r\n    },\r\n  ]);\r\n  const product = (category) => {\r\n    console.log(category);\r\n    history.push(`/category/${category}`);\r\n  };\r\n  return (\r\n    <div className=\"categorys\">\r\n      {categorys.map((category) => (\r\n        <Button\r\n          className=\"categoryName\"\r\n          // startIcon={<AddIcon fontSize=\"large\" />}\r\n          onClick={() => product(category.product)}\r\n        >\r\n          {category.name}\r\n        </Button>\r\n        // <button\r\n        //   className=\"categoryName\"\r\n        //   onClick={() => product(category.product)}\r\n        // >\r\n        //   {category.name}\r\n        // </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Category;\r\n","E:\\Project\\shopping\\src\\user\\Checkout\\Checkout.js",["222","223"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getOrderId } from \"../../features/addressForm\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Shoppers\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = [\"Shipping address\", \"Review your order\", \"Payment details\"];\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <AddressForm />;\r\n    case 1:\r\n      return <Review />;\r\n    case 2:\r\n      return <PaymentForm />;\r\n    default:\r\n      throw new Error(\"Unknown step\");\r\n  }\r\n}\r\n\r\nexport default function Checkout() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const order_id = useSelector(getOrderId);\r\n  const history = useHistory();\r\n  console.log(order_id.orderid);\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      {/* <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Company name\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar> */}\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Thank you for your order.\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  Your order number is {order_id.orderid}. We have emailed your\r\n                  order confirmation, and will send you an update when your\r\n                  order has shipped.\r\n                </Typography>\r\n                <br />\r\n                <Button\r\n                  onClick={() => history.push(\"/orders\")}\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    textAlign: \"center\",\r\n                    margin: \"auto\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  Go To Orders Page\r\n                </Button>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                {getStepContent(activeStep)}\r\n                <div className={classes.buttons}>\r\n                  {activeStep !== 0 && activeStep <= 1 && (\r\n                    <Button onClick={handleBack} className={classes.button}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                  {activeStep === steps.length - 1 ? (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleNext}\r\n                      className={classes.button}\r\n                    >\r\n                      Next\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleNext}\r\n                      className={classes.button}\r\n                    >\r\n                      Next\r\n                    </Button>\r\n                  )}\r\n                  {/* <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? \"Place order\" : \"Next\"}\r\n                  </Button> */}\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        </Paper>\r\n        <Copyright />\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","E:\\Project\\shopping\\src\\user\\Checkout\\AddressForm.js",["224","225"],"import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ADD_FORM_DETAIL, getAddressForm } from \"../../features/addressForm\";\r\nexport default function AddressForm() {\r\n  const [addressForm, setAddressForm] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    address1: \"\",\r\n    address2: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zip: \"\",\r\n    contactNumber: \"\",\r\n    country: \"\",\r\n  });\r\n  const addressdetail = useSelector(getAddressForm);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setAddressForm({\r\n      firstName: addressdetail.firstName,\r\n      lastName: addressdetail.lastName,\r\n      address1: addressdetail.address1,\r\n      address2: addressdetail.address2,\r\n      city: addressdetail.city,\r\n      state: addressdetail.state,\r\n      zip: addressdetail.zip,\r\n      country: addressdetail.country,\r\n      contactNumber: addressdetail.contactNumber,\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    dispatch(\r\n      ADD_FORM_DETAIL({\r\n        firstName: addressForm.firstName,\r\n        lastName: addressForm.lastName,\r\n        address1: addressForm.address1,\r\n        address2: addressForm.address2,\r\n        city: addressForm.city,\r\n        state: addressForm.state,\r\n        zip: addressForm.zip,\r\n        country: addressForm.country,\r\n        contactNumber: addressForm.contactNumber,\r\n      })\r\n    );\r\n  }, [addressForm]);\r\n  const handleChange = (event) => {\r\n    setAddressForm({ ...addressForm, [event.target.name]: event.target.value });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            label=\"First name\"\r\n            fullWidth\r\n            autoComplete=\"given-name\"\r\n            onChange={handleChange}\r\n            value={addressForm.firstName}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            label=\"Last name\"\r\n            fullWidth\r\n            autoComplete=\"family-name\"\r\n            onChange={handleChange}\r\n            value={addressForm.lastName}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            label=\"Address line 1\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line1\"\r\n            onChange={handleChange}\r\n            value={addressForm.address1}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            label=\"Address line 2\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line2\"\r\n            onChange={handleChange}\r\n            value={addressForm.address2}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"contactNumber\"\r\n            name=\"contactNumber\"\r\n            label=\"Contact Number\"\r\n            type=\"text\"\r\n            fullWidth\r\n            required\r\n            autoComplete=\"shipping contactNumber\"\r\n            onChange={handleChange}\r\n            value={addressForm.contactNumber}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"City\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-level2\"\r\n            onChange={handleChange}\r\n            value={addressForm.city}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"state\"\r\n            name=\"state\"\r\n            label=\"State/Province/Region\"\r\n            fullWidth\r\n            required\r\n            onChange={handleChange}\r\n            value={addressForm.state}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"zip\"\r\n            name=\"zip\"\r\n            label=\"Zip / Postal code\"\r\n            fullWidth\r\n            onChange={handleChange}\r\n            autoComplete=\"shipping postal-code\"\r\n            value={addressForm.zip}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"country\"\r\n            name=\"country\"\r\n            label=\"Country\"\r\n            fullWidth\r\n            onChange={handleChange}\r\n            value={addressForm.country}\r\n            autoComplete=\"shipping country\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","E:\\Project\\shopping\\src\\user\\Checkout\\PaymentForm.js",["226","227"],"import React, { useEffect, useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Payment from \"./Payment\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nconst promise = loadStripe(\r\n  \"pk_test_51IXgpiSBGmQwpVF9BUa0SvOQhqx8VulzBimlJ3tyUDF6LtjAITyNe8HKOR4v6FLVOiBtuvDb52hdKAWWXiLgZPhS00oOVvxCSa\"\r\n);\r\n\r\nexport default function PaymentForm() {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Elements stripe={promise}>\r\n          <Payment />\r\n        </Elements>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","E:\\Project\\shopping\\src\\user\\Checkout\\Review.js",[],"E:\\Project\\shopping\\src\\user\\Checkout\\Payment.js",["228","229","230","231","232","233","234"],"import \"./Payment.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport axios from \"../../axios\";\r\nimport { useElements, useStripe, CardElement } from \"@stripe/react-stripe-js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  EMPTY_BASKET,\r\n  getBasketTotal,\r\n  selectBasket,\r\n} from \"../../features/cartSlice\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import TypeWriter from \"react-typewriter\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport { selectUser } from \"../../features/userSlice\";\r\nimport { getAddressForm, ORDER_ID } from \"../../features/addressForm\";\r\nimport emailjs from \"emailjs-com\";\r\nimport OrderId from \"order-id\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nfunction Payment() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n  const history = useHistory();\r\n  const order_id = OrderId(\"my-secret\");\r\n  const [clientSecret, setClientSecret] = useState(true);\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  //   const [{ basket, user }, dispatch] = useStateValue();\r\n  const basket = useSelector(selectBasket);\r\n  const addressdetail = useSelector(getAddressForm);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const total = useSelector(getBasketTotal);\r\n  const [error, setError] = useState(null);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  var orderDetails = \"\";\r\n  var order = basket.forEach((product, index) => {\r\n    orderDetails +=\r\n      \"<tr><td style='border: 1px solid black; text-align:center'>\" +\r\n      product?.name +\r\n      \"</td> <td style='border: 1px solid black; text-align:center'>₹ \" +\r\n      (product?.originalPrice -\r\n        product?.originalPrice * (product?.discount / 100)) +\r\n      \"</td> <td style='border: 1px solid black; text-align:center'>\" +\r\n      product?.cartValue +\r\n      \"</td> <td style='border: 1px solid black; text-align:center'>₹ \" +\r\n      (product?.originalPrice -\r\n        product?.originalPrice * (product?.discount / 100)) *\r\n        product?.cartValue +\r\n      \"</td> </tr>\";\r\n    return orderDetails;\r\n  });\r\n  console.log(orderDetails);\r\n\r\n  useEffect(() => {\r\n    // generate the special stripe secret which allows us to charge a customer\r\n    const getClientSecret = async () => {\r\n      const response = await axios({\r\n        method: \"post\",\r\n        // Stripe expects the total in a currencies sub units\r\n        url: `/payments/create?total=${total * 100}`,\r\n      });\r\n      setClientSecret(response.data.clientSecret);\r\n    };\r\n\r\n    getClientSecret();\r\n  }, [total]);\r\n\r\n  // console.log(\"the secret key is \", clientSecret);\r\n  const handleChange = async (event) => {\r\n    setDisabled(event.empty);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setProcessing(true);\r\n    const payload = await stripe\r\n      .confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      })\r\n      .then(({ paymentIntent }) => {\r\n        // paymentIntent = payment confirmation\r\n        // console.log(paymentIntent);\r\n        const order__id = order_id.generate();\r\n        const req = axios\r\n          .post(`/orders`, {\r\n            uid: user.uid,\r\n            orderId: order__id,\r\n            date: new Date().toString(),\r\n            orderList: basket,\r\n            status: 0,\r\n            deliveryDate: null,\r\n            placedBy: addressdetail,\r\n            orderTotal: total,\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n          })\r\n          .catch((error) => alert(error));\r\n        dispatch(ORDER_ID({ orderid: order__id }));\r\n        dispatch(EMPTY_BASKET());\r\n        sendEmail(order__id);\r\n        setSucceeded(true);\r\n        setError(null);\r\n        setProcessing(false);\r\n      });\r\n  };\r\n  const sendEmail = (id) => {\r\n    var templateParams = {\r\n      to_name: user.name,\r\n      to_email: user.email,\r\n      order_id: id,\r\n      message: `<div class=\"orders\">\r\n      <table\r\n        style=\"width:100%; border: 1px solid black;\r\n  text-align:center;\"\r\n      >\r\n        <tr>\r\n          <th\r\n            style=\" border: 1px solid black;\r\n  text-align:center;\"\r\n          >\r\n            Product Name\r\n          </th>\r\n          <th\r\n            style=\" border: 1px solid black;\r\n  text-align:center;\"\r\n          >\r\n            Product Price\r\n          </th>\r\n          <th\r\n            style=\" border: 1px solid black;\r\n  text-align:center;\"\r\n          >\r\n            Quantity\r\n          </th>\r\n          <th\r\n            style=\" border: 1px solid black;\r\n  text-align:center;\"\r\n          >\r\n            Total Price\r\n          </th>\r\n        </tr>\r\n        ${orderDetails}\r\n        <tr>\r\n          <td colspan=\"4\" style=\"text-align:right;padding-right:30px \">\r\n            <b>Total : ₹ ${total}</b>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>`,\r\n    };\r\n    console.log(templateParams);\r\n    emailjs.send(\r\n      \"service_jraq3xw\",\r\n      \"template_ybl8um8\",\r\n      templateParams,\r\n      \"user_stwODU4rLf8nbtB6AkfaN\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment\">\r\n      {processing && (\r\n        <div>\r\n          <Backdrop className={classes.backdrop} open={open}>\r\n            <div className=\"processing\">\r\n              <div className=\"processing__info\">\r\n                <h1>\r\n                  You <bold>Payment</bold> is being under Process{\"  \"}\r\n                </h1>\r\n                <Typewriter\r\n                  className=\"typewriter__Processing\"\r\n                  options={{\r\n                    strings: [\"...\"],\r\n                    autoStart: true,\r\n                    loop: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <br />\r\n              <CircularProgress color=\"inherit\" />\r\n            </div>\r\n          </Backdrop>\r\n        </div>\r\n      )}\r\n      <div className=\"payment__container\">\r\n        <div className=\"payment__section\">\r\n          <div className=\"payment__details\">\r\n            {/* Stripe Magic */}\r\n            {!succeeded ? (\r\n              <form onSubmit={handleSubmit}>\r\n                <CardElement onChange={handleChange} />\r\n                <div className=\"payment__priceContainer\">\r\n                  <CurrencyFormat\r\n                    renderText={(value) => <h3>Order Total: {value}</h3>}\r\n                    decimalScale={2}\r\n                    value={total}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"₹\"}\r\n                  />\r\n                  <button disabled={processing || disabled || succeeded}>\r\n                    <span>\r\n                      {processing ? <p>Processing</p> : \"Confirm Payment\"}\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n                {error && <div>{error}</div>}\r\n              </form>\r\n            ) : (\r\n              <h1>Orders is placed successfully.</h1>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n","E:\\Project\\shopping\\src\\features\\addressForm.js",[],"E:\\Project\\shopping\\src\\user\\Order\\Orders.js",["235"],"E:\\Project\\shopping\\src\\user\\Order\\Order.js",["236"],"import React from \"react\";\r\nimport \"./Order.css\";\r\nimport moment from \"moment\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport numeral from \"numeral\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"98%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n    marginTop: 10,\r\n    paddingTop: 10,\r\n  },\r\n  list: {\r\n    paddingLeft: 40,\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\nfunction Order({ order }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"order\">\r\n      <h2>Order</h2>\r\n      <p>{order?.date}</p>\r\n      <p className=\"order__id\">\r\n        Order Id : <small> {order?.orderId} </small>\r\n      </p>\r\n      <br />\r\n      <p>Delivered :</p>\r\n      <div>\r\n        <h5>\r\n          Name : {order?.placedBy[0]?.firstName} {order?.placedBy[0]?.lastName}\r\n        </h5>\r\n        <p>\r\n          Address : {order?.placedBy[0]?.address1} , {order?.placedBy[0]?.city}{\" \"}\r\n          , {order?.placedBy[0]?.zip} {order?.placedBy[0]?.state} -\r\n          {order?.placedBy[0]?.country}\r\n        </p>\r\n      </div>\r\n\r\n      <List className={classes.root}>\r\n        {order.orderList.map((product) => (\r\n          <React.Fragment>\r\n            <ListItem alignItems=\"flex-start\">\r\n              <ListItemAvatar>\r\n                <div className=\"product__image\">\r\n                  <img\r\n                    src={product?.img}\r\n                    alt=\"\"\r\n                    width={130}\r\n                    height={150}\r\n                    className=\"product__image\"\r\n                  />\r\n                </div>\r\n              </ListItemAvatar>\r\n\r\n              <ListItemText\r\n                className={classes.list}\r\n                // onClick={(event) => {\r\n                //   history.replace(`/product-detail/${category}/${product._id}`);\r\n                // }}\r\n                primary={product?.name}\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <Rating\r\n                      name=\"read-only\"\r\n                      value={product?.rating}\r\n                      readOnly\r\n                      precision={0.1}\r\n                      style={{ marginTop: \"10px\" }}\r\n                    />\r\n                    <div className=\"display__product__price\">\r\n                      <div className=\"productPrice\">\r\n                        <span className=\"price\">\r\n                          Product Price: ₹{\" \"}\r\n                          {numeral(\r\n                            product?.originalPrice -\r\n                              product?.originalPrice * (product?.discount / 100)\r\n                          ).format(\"0,0.00\")}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"product__priceSave\">\r\n                        Discount : <span className=\"price\"> 5%</span>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{ marginTop: \"10px\" }} />\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"body2\"\r\n                      className={classes.inline}\r\n                      color=\"textPrimary\"\r\n                    >\r\n                      Brand :\r\n                    </Typography>{\" \"}\r\n                    {product?.seller}\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n      <CurrencyFormat\r\n        renderText={(value) => (\r\n          <h3 className=\"order__total\">Order Total: {value}</h3>\r\n        )}\r\n        decimalScale={2}\r\n        value={order?.orderTotal}\r\n        displayType={\"text\"}\r\n        thousandSeparator={true}\r\n        prefix={\"₹\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Order;\r\n","E:\\Project\\shopping\\src\\user\\Pending Orders\\PendingOrders.js",["237"],"E:\\Project\\shopping\\src\\user\\Pending Orders\\PendingOrder.js",["238"],"E:\\Project\\shopping\\src\\user\\Pending Orders\\Status.js",["239","240","241","242","243","244","245","246","247","248","249","250","251"],{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","severity":1,"message":"257","line":19,"column":3,"nodeType":"258","messageId":"259","endLine":19,"endColumn":7},{"ruleId":"256","severity":1,"message":"260","line":20,"column":3,"nodeType":"258","messageId":"259","endLine":20,"endColumn":13},{"ruleId":"256","severity":1,"message":"261","line":43,"column":10,"nodeType":"258","messageId":"259","endLine":43,"endColumn":17},{"ruleId":"256","severity":1,"message":"262","line":44,"column":9,"nodeType":"258","messageId":"259","endLine":44,"endColumn":13},{"ruleId":"256","severity":1,"message":"263","line":54,"column":17,"nodeType":"258","messageId":"259","endLine":54,"endColumn":20},{"ruleId":"256","severity":1,"message":"264","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":26},{"ruleId":"256","severity":1,"message":"265","line":5,"column":17,"nodeType":"258","messageId":"259","endLine":5,"endColumn":25},{"ruleId":"256","severity":1,"message":"266","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":26},{"ruleId":"256","severity":1,"message":"267","line":6,"column":10,"nodeType":"258","messageId":"259","endLine":6,"endColumn":14},{"ruleId":"256","severity":1,"message":"268","line":8,"column":8,"nodeType":"258","messageId":"259","endLine":8,"endColumn":16},{"ruleId":"256","severity":1,"message":"269","line":9,"column":8,"nodeType":"258","messageId":"259","endLine":9,"endColumn":24},{"ruleId":"256","severity":1,"message":"270","line":20,"column":9,"nodeType":"258","messageId":"259","endLine":20,"endColumn":16},{"ruleId":"256","severity":1,"message":"263","line":27,"column":13,"nodeType":"258","messageId":"259","endLine":27,"endColumn":16},{"ruleId":"271","severity":1,"message":"272","line":42,"column":6,"nodeType":"273","endLine":42,"endColumn":8,"suggestions":"274"},{"ruleId":"256","severity":1,"message":"275","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":19},{"ruleId":"256","severity":1,"message":"276","line":6,"column":8,"nodeType":"258","messageId":"259","endLine":6,"endColumn":14},{"ruleId":"277","severity":1,"message":"278","line":63,"column":9,"nodeType":"279","endLine":68,"endColumn":11},{"ruleId":"256","severity":1,"message":"280","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":26},{"ruleId":"256","severity":1,"message":"262","line":17,"column":9,"nodeType":"258","messageId":"259","endLine":17,"endColumn":13},{"ruleId":"256","severity":1,"message":"261","line":19,"column":10,"nodeType":"258","messageId":"259","endLine":19,"endColumn":17},{"ruleId":"256","severity":1,"message":"263","line":31,"column":21,"nodeType":"258","messageId":"259","endLine":31,"endColumn":24},{"ruleId":"256","severity":1,"message":"263","line":29,"column":17,"nodeType":"258","messageId":"259","endLine":29,"endColumn":20},{"ruleId":"256","severity":1,"message":"280","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":26},{"ruleId":"256","severity":1,"message":"281","line":1,"column":28,"nodeType":"258","messageId":"259","endLine":1,"endColumn":36},{"ruleId":"256","severity":1,"message":"282","line":14,"column":10,"nodeType":"258","messageId":"259","endLine":14,"endColumn":15},{"ruleId":"256","severity":1,"message":"283","line":14,"column":17,"nodeType":"258","messageId":"259","endLine":14,"endColumn":23},{"ruleId":"256","severity":1,"message":"284","line":7,"column":8,"nodeType":"258","messageId":"259","endLine":7,"endColumn":17},{"ruleId":"256","severity":1,"message":"285","line":8,"column":8,"nodeType":"258","messageId":"259","endLine":8,"endColumn":16},{"ruleId":"256","severity":1,"message":"267","line":6,"column":10,"nodeType":"258","messageId":"259","endLine":6,"endColumn":14},{"ruleId":"256","severity":1,"message":"263","line":20,"column":13,"nodeType":"258","messageId":"259","endLine":20,"endColumn":16},{"ruleId":"271","severity":1,"message":"272","line":35,"column":6,"nodeType":"273","endLine":35,"endColumn":8,"suggestions":"286"},{"ruleId":"277","severity":1,"message":"278","line":104,"column":7,"nodeType":"279","endLine":104,"endColumn":44},{"ruleId":"256","severity":1,"message":"287","line":11,"column":8,"nodeType":"258","messageId":"259","endLine":11,"endColumn":29},{"ruleId":"256","severity":1,"message":"288","line":19,"column":3,"nodeType":"258","messageId":"259","endLine":19,"endColumn":15},{"ruleId":"256","severity":1,"message":"289","line":21,"column":3,"nodeType":"258","messageId":"259","endLine":21,"endColumn":19},{"ruleId":"290","severity":1,"message":"291","line":61,"column":26,"nodeType":"292","messageId":"293","endLine":61,"endColumn":28},{"ruleId":"271","severity":1,"message":"294","line":66,"column":6,"nodeType":"273","endLine":66,"endColumn":14,"suggestions":"295"},{"ruleId":"256","severity":1,"message":"263","line":129,"column":13,"nodeType":"258","messageId":"259","endLine":129,"endColumn":16},{"ruleId":"271","severity":1,"message":"296","line":144,"column":6,"nodeType":"273","endLine":144,"endColumn":8,"suggestions":"297"},{"ruleId":"298","severity":1,"message":"299","line":437,"column":15,"nodeType":"300","endLine":437,"endColumn":38},{"ruleId":"256","severity":1,"message":"301","line":10,"column":8,"nodeType":"258","messageId":"259","endLine":10,"endColumn":14},{"ruleId":"256","severity":1,"message":"302","line":1,"column":10,"nodeType":"258","messageId":"259","endLine":1,"endColumn":17},{"ruleId":"256","severity":1,"message":"263","line":17,"column":13,"nodeType":"258","messageId":"259","endLine":17,"endColumn":16},{"ruleId":"271","severity":1,"message":"303","line":32,"column":6,"nodeType":"273","endLine":32,"endColumn":8,"suggestions":"304"},{"ruleId":"256","severity":1,"message":"305","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":17},{"ruleId":"256","severity":1,"message":"301","line":13,"column":8,"nodeType":"258","messageId":"259","endLine":13,"endColumn":14},{"ruleId":"256","severity":1,"message":"288","line":20,"column":3,"nodeType":"258","messageId":"259","endLine":20,"endColumn":15},{"ruleId":"256","severity":1,"message":"306","line":21,"column":3,"nodeType":"258","messageId":"259","endLine":21,"endColumn":16},{"ruleId":"256","severity":1,"message":"257","line":35,"column":10,"nodeType":"258","messageId":"259","endLine":35,"endColumn":14},{"ruleId":"256","severity":1,"message":"307","line":12,"column":7,"nodeType":"258","messageId":"259","endLine":12,"endColumn":18},{"ruleId":"256","severity":1,"message":"276","line":2,"column":8,"nodeType":"258","messageId":"259","endLine":2,"endColumn":14},{"ruleId":"256","severity":1,"message":"280","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":26},{"ruleId":"256","severity":1,"message":"308","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":13},{"ruleId":"256","severity":1,"message":"309","line":9,"column":21,"nodeType":"258","messageId":"259","endLine":9,"endColumn":33},{"ruleId":"256","severity":1,"message":"310","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":14},{"ruleId":"256","severity":1,"message":"311","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":15},{"ruleId":"271","severity":1,"message":"312","line":33,"column":6,"nodeType":"273","endLine":33,"endColumn":8,"suggestions":"313"},{"ruleId":"271","severity":1,"message":"314","line":48,"column":6,"nodeType":"273","endLine":48,"endColumn":19,"suggestions":"315"},{"ruleId":"256","severity":1,"message":"280","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":26},{"ruleId":"256","severity":1,"message":"281","line":1,"column":28,"nodeType":"258","messageId":"259","endLine":1,"endColumn":36},{"ruleId":"256","severity":1,"message":"257","line":3,"column":10,"nodeType":"258","messageId":"259","endLine":3,"endColumn":14},{"ruleId":"256","severity":1,"message":"316","line":40,"column":9,"nodeType":"258","messageId":"259","endLine":40,"endColumn":20},{"ruleId":"256","severity":1,"message":"317","line":43,"column":9,"nodeType":"258","messageId":"259","endLine":43,"endColumn":21},{"ruleId":"256","severity":1,"message":"318","line":46,"column":9,"nodeType":"258","messageId":"259","endLine":46,"endColumn":16},{"ruleId":"256","severity":1,"message":"319","line":62,"column":7,"nodeType":"258","messageId":"259","endLine":62,"endColumn":12},{"ruleId":"256","severity":1,"message":"320","line":102,"column":11,"nodeType":"258","messageId":"259","endLine":102,"endColumn":18},{"ruleId":"256","severity":1,"message":"263","line":112,"column":15,"nodeType":"258","messageId":"259","endLine":112,"endColumn":18},{"ruleId":"256","severity":1,"message":"263","line":17,"column":13,"nodeType":"258","messageId":"259","endLine":17,"endColumn":16},{"ruleId":"256","severity":1,"message":"321","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":14},{"ruleId":"256","severity":1,"message":"263","line":17,"column":13,"nodeType":"258","messageId":"259","endLine":17,"endColumn":16},{"ruleId":"256","severity":1,"message":"321","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":14},{"ruleId":"256","severity":1,"message":"322","line":9,"column":8,"nodeType":"258","messageId":"259","endLine":9,"endColumn":20},{"ruleId":"256","severity":1,"message":"323","line":10,"column":8,"nodeType":"258","messageId":"259","endLine":10,"endColumn":20},{"ruleId":"256","severity":1,"message":"324","line":11,"column":8,"nodeType":"258","messageId":"259","endLine":11,"endColumn":22},{"ruleId":"256","severity":1,"message":"276","line":13,"column":8,"nodeType":"258","messageId":"259","endLine":13,"endColumn":14},{"ruleId":"256","severity":1,"message":"325","line":14,"column":8,"nodeType":"258","messageId":"259","endLine":14,"endColumn":18},{"ruleId":"256","severity":1,"message":"326","line":20,"column":7,"nodeType":"258","messageId":"259","endLine":20,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":148,"column":8,"nodeType":"279","endLine":148,"endColumn":52},{"ruleId":"277","severity":1,"message":"278","line":149,"column":8,"nodeType":"279","endLine":149,"endColumn":58},{"ruleId":"277","severity":1,"message":"278","line":150,"column":8,"nodeType":"279","endLine":150,"endColumn":57},{"ruleId":"277","severity":1,"message":"278","line":151,"column":8,"nodeType":"279","endLine":151,"endColumn":56},{"ruleId":"277","severity":1,"message":"278","line":152,"column":8,"nodeType":"279","endLine":152,"endColumn":58},{"ruleId":"256","severity":1,"message":"327","line":205,"column":10,"nodeType":"258","messageId":"259","endLine":205,"endColumn":24},{"ruleId":"256","severity":1,"message":"328","line":225,"column":22,"nodeType":"258","messageId":"259","endLine":225,"endColumn":35},"no-native-reassign",["329"],"no-negated-in-lhs",["330"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'loading' is assigned a value but never used.","'user' is assigned a value but never used.","'req' is assigned a value but never used.","'createRef' is defined but never used.","'setImage' is assigned a value but never used.","'Component' is defined but never used.","'DATA' is defined but never used.","'Backdrop' is defined but never used.","'CircularProgress' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'route'. Either include it or remove the dependency array.","ArrayExpression",["331"],"'CardActions' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","'login' is defined but never used.","'logout' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.",["332"],"'ReactReadMoreReadLess' is defined but never used.","'EMPTY_BASKET' is defined but never used.","'REMOVE_FROM_CART' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'product_id'. Either include it or remove the dependency array.",["333"],"React Hook useEffect has missing dependencies: 'product_id' and 'route'. Either include them or remove the dependency array.",["334"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Avatar' is defined but never used.","'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.",["335"],"'TextField' is defined but never used.","'ADD_TO_BASKET' is defined but never used.","'firebaseApp' is assigned a value but never used.","'axios' is defined but never used.","'setCategorys' is assigned a value but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","React Hook useEffect has missing dependencies: 'addressdetail.address1', 'addressdetail.address2', 'addressdetail.city', 'addressdetail.contactNumber', 'addressdetail.country', 'addressdetail.firstName', 'addressdetail.lastName', 'addressdetail.state', and 'addressdetail.zip'. Either include them or remove the dependency array.",["336"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["337"],"'handleClose' is assigned a value but never used.","'handleToggle' is assigned a value but never used.","'history' is assigned a value but never used.","'order' is assigned a value but never used.","'payload' is assigned a value but never used.","'moment' is defined but never used.","'SettingsIcon' is defined but never used.","'GroupAddIcon' is defined but never used.","'VideoLabelIcon' is defined but never used.","'Typography' is defined but never used.","'QontoConnector' is assigned a value but never used.","'getStepContent' is defined but never used.","'setActiveStep' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"338","fix":"339"},{"desc":"338","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},"Update the dependencies array to be: [route]",{"range":"351","text":"352"},{"range":"353","text":"352"},"Update the dependencies array to be: [basket, product_id]",{"range":"354","text":"355"},"Update the dependencies array to be: [product_id, route]",{"range":"356","text":"357"},"Update the dependencies array to be: [category]",{"range":"358","text":"359"},"Update the dependencies array to be: [addressdetail.address1, addressdetail.address2, addressdetail.city, addressdetail.contactNumber, addressdetail.country, addressdetail.firstName, addressdetail.lastName, addressdetail.state, addressdetail.zip]",{"range":"360","text":"361"},"Update the dependencies array to be: [addressForm, dispatch]",{"range":"362","text":"363"},[1195,1197],"[route]",[1112,1114],[2357,2365],"[basket, product_id]",[4096,4098],"[product_id, route]",[860,862],"[category]",[1108,1110],"[addressdetail.address1, addressdetail.address2, addressdetail.city, addressdetail.contactNumber, addressdetail.country, addressdetail.firstName, addressdetail.lastName, addressdetail.state, addressdetail.zip]",[1553,1566],"[addressForm, dispatch]"]